FROM registry.gitlab.ics.muni.cz:443/cryton/cryton/production-base:latest as base

# Set environment
ENV POETRY_VIRTUALENVS_IN_PROJECT=true

WORKDIR /app

# Install dependencies
COPY poetry.lock pyproject.toml ./
RUN poetry install --without dev --no-root --no-interaction --no-ansi -E cli

# Install app
COPY . .
RUN poetry install --only-root --no-interaction --no-ansi -E cli

FROM python:3.12-alpine as production

# Set environment
ENV CRYTON_APP_DIRECTORY=/app

# Install necessary packages
RUN apk add --no-cache \
    bash

# Copy app
COPY --from=base /app /app

# Make the executable accessible
RUN ln -s /app/.venv/bin/cryton-cli /usr/local/bin/cryton-cli

# Enable shell autocompletion
RUN _CRYTON_CLI_COMPLETE=bash_source cryton-cli > /etc/profile.d/cryton-cli-complete.sh
RUN echo ". /etc/profile.d/cryton-cli-complete.sh" >> ~/.bashrc

CMD [ "bash" ]

FROM production as e2e-tests

ENV TZ=UTC

RUN apk add --no-cache \
    curl

# Install dependencies
RUN /app/.venv/bin/pip install PyYAML
